{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/lsp4j/lsp4j.component.css","./src/app/lsp4j/lsp4j.component.html","./src/app/lsp4j/lsp4j.component.ts","./src/environments/environment.ts","./src/main.ts","util (ignored)","util (ignored)?d5e5"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<app-lsp4j></app-lsp4j>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Spring DLS LSP Demo';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { Lsp4jComponent } from './lsp4j/lsp4j.component';\nimport { MonacoEditorModule, NgxMonacoEditorConfig } from 'ngx-monaco-editor';\n\nconst monacoConfig: NgxMonacoEditorConfig = {\n  // baseUrl: 'app-name/assets',\n  // defaultOptions: { scrollBeyondLastLine: false },\n  onMonacoLoad: () => {\n    console.log((<any>window).monaco);\n    (<any>window).monaco.languages.register({ id: 'simple' });\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Lsp4jComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    MonacoEditorModule.forRoot(monacoConfig)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/lsp4j/lsp4j.component.css\n// module id = ./src/app/lsp4j/lsp4j.component.css\n// module chunks = main","module.exports = \"<div>\\n  Use below monaco editor to play with simple dummy language.\\n</div>\\n<div>\\n  <ngx-monaco-editor [options]=\\\"editorOptions\\\" [(ngModel)]=\\\"code\\\" (onInit)=\\\"onInit($event)\\\"></ngx-monaco-editor>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/lsp4j/lsp4j.component.html\n// module id = ./src/app/lsp4j/lsp4j.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { listen, MessageConnection } from 'vscode-ws-jsonrpc';\nimport {\n  BaseLanguageClient, CloseAction, ErrorAction,\n  createMonacoServices, createConnection\n} from 'monaco-languageclient';\nimport {EditorComponent} from 'ngx-monaco-editor/editor.component';\n\n// import { editor } from 'monaco-editor';\n// import { editor, Position } from 'monaco-editor';\n// import {IOverlayWidgetPosition} from 'monaco-editor';\n\n// import {normalizeUrl} from 'normalize-url';\n\nrequire('set-immediate');\n\nconst normalizeUrl = require('normalize-url');\nconst ReconnectingWebSocket = require('reconnecting-websocket');\n\n@Component({\n  selector: 'app-lsp4j',\n  templateUrl: './lsp4j.component.html',\n  styleUrls: ['./lsp4j.component.css']\n})\nexport class Lsp4jComponent implements OnInit {\n\n  // editorOptions = {theme: 'vs-dark', language: 'text/plain'};\n  // editorOptions = {model: null, theme: 'vs-dark'};\n  // editorOptions = {theme: 'vs', language: 'javascript'};\n  editorOptions = {theme: 'vs', language: 'simple'};\n  // code = 'int=1\\nlong=100\\ndouble=1.0\\nstring=hello\\n';\n  code = '';\n  private xxx: any;\n  // private xxx: monaco.editor.IStandaloneCodeEditor;\n\n  constructor() {\n  }\n\n  onInit(xxx: any) {\n    this.xxx = xxx;\n    // const pos: Position = xxx.getPosition();\n    // console.log(xxx.getLanguages());\n\n    const url = this.createUrl('/ws');\n    const webSocket = this.createWebSocket(url);\n\n    listen({\n      webSocket,\n      onConnection: connection => {\n        // create and start the language client\n        const languageClient = this.createLanguageClient(connection);\n        const disposable = languageClient.start();\n        connection.onClose(() => disposable.dispose());\n      }\n    });\n\n  }\n\n  ngOnInit() {\n    // const url = this.createUrl('/ws');\n    // const webSocket = this.createWebSocket(url);\n    //\n    // listen({\n    //   webSocket,\n    //   onConnection: connection => {\n    //     // create and start the language client\n    //     const languageClient = this.createLanguageClient(connection);\n    //     const disposable = languageClient.start();\n    //     connection.onClose(() => disposable.dispose());\n    //   }\n    // });\n\n  }\n\n  private createLanguageClient(connection: MessageConnection): BaseLanguageClient {\n    const services = createMonacoServices(this.xxx);\n    return new BaseLanguageClient({\n      name: 'Sample Language Client',\n      clientOptions: {\n        // use a language id as a document selector\n        documentSelector: ['simple'],\n        synchronize: {\n        },\n        // disable the default error handler\n        errorHandler: {\n          error: () => ErrorAction.Continue,\n          closed: () => CloseAction.DoNotRestart\n        }\n      },\n      services,\n      // create a language client connection from the JSON RPC connection on demand\n      connectionProvider: {\n        get: (errorHandler, closeHandler) => {\n          return Promise.resolve(createConnection(connection, errorHandler, closeHandler));\n        }\n      }\n    });\n  }\n\n  private createUrl(path: string): string {\n    const protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n    return normalizeUrl(`${protocol}://${location.host}${location.pathname}${path}`);\n  }\n\n  private createWebSocket(url: string): WebSocket {\n    const socketOptions = {\n      maxReconnectionDelay: 10000,\n      minReconnectionDelay: 1000,\n      reconnectionDelayGrowFactor: 1.3,\n      connectionTimeout: 10000,\n      maxRetries: Infinity,\n      debug: false\n    };\n    return new ReconnectingWebSocket(url, undefined, socketOptions);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/lsp4j/lsp4j.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1\n// module chunks = main","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 2\n// module chunks = main"],"sourceRoot":"webpack:///"}