description = 'Spring Dsl Samples Common'

project('spring-dsl-samples-simpledsl') {
	description = 'Spring Dsl Simple Dsl Sample'
	dependencies {
		compile project(':spring-dsl-antlr')
		compile project(':spring-dsl-lsp-server')
		testCompile 'junit:junit'
		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}
}

project('spring-dsl-samples-simpledsleditor') {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'com.moowork.node'
	
	description = 'Spring Dsl Simple Editor Sample'
	
	dependencies {
		compile project(':spring-dsl-lsp-server')
		compile project(':spring-dsl-websocket')
		compile project(':spring-dsl-autoconfigure')
		compile project(':spring-dsl-samples-common:spring-dsl-samples-simpledsl')
		//compile 'org.springframework.boot:spring-boot-starter-websocket'
		testCompile 'junit:junit'
	}
	
	node {
		version = "8.9.4"
		download = true
		nodeModulesDir = file("ui")
	}

	task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
		group = 'build'
		description = 'Compile client side folder for development'
		args = ['run','buildDev']
	}

	task buildClient(type:NpmTask, dependsOn:'npmInstall') {
		group = 'build'
		description = "Compile client side folder for production"
		args = ['run','build']
	}

	task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
		group = 'application'
		description = "Build and watches the client side assets for rebuilding"
		args = ['run','buildWatch']
	}

	bootRun.dependsOn(buildClientDev)
	jar.dependsOn(buildClient)
	build.dependsOn bootJar
	install.dependsOn bootJar
}

project('spring-dsl-samples-simpledslprocessserver') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Dsl Simple Lsp Process Server Sample'
	dependencies {
		compile project(':spring-dsl-lsp-server')
		compile project(':spring-dsl-autoconfigure')
		compile project(':spring-dsl-samples-common:spring-dsl-samples-simpledsl')
		compile 'org.springframework.boot:spring-boot-starter'
		testCompile 'junit:junit'
	}
	build.dependsOn bootJar
	install.dependsOn bootJar
}

project('spring-dsl-samples-simpledslsocketserver') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Dsl Simple Lsp Socket Server Sample'
	dependencies {
		compile project(':spring-dsl-lsp-server')
		compile project(':spring-dsl-autoconfigure')
		compile project(':spring-dsl-samples-common:spring-dsl-samples-simpledsl')
		compile 'org.springframework.boot:spring-boot-starter'
		testCompile 'junit:junit'
	}
	build.dependsOn bootJar
	install.dependsOn bootJar
}
